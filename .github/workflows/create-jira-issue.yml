name: Create Jira Issue and Sync with GitHub

on:
  issues:
    types: [opened]
  push:
    branches:
      - 'feat/*'
      - 'fix/*'
      - 'docs/*'
      - 'setting/*'
      - 'add/*'
      - 'refactor/*'
      - 'chore/*'

jobs:
  create_jira_issue:
    if: github.event_name == 'issues'
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Create Jira issue
        env:
          JIRA_API_TOKEN: ${{ secrets.JIRA_API_TOKEN }}
          JIRA_BASEURL: ${{ secrets.JIRA_BASEURL }}
          JIRA_EMAIL: ${{ secrets.JIRA_EMAIL }}
          JIRA_PROJECT_KEY: ${{ secrets.JIRA_PROJECT_KEY }}
        run: |
          ISSUE_TITLE="${{ github.event.issue.title }}"
          
          JSON_DATA=$(jq -n \
            --arg key "$JIRA_PROJECT_KEY" \
            --arg summary "$ISSUE_TITLE" \
            '{
              "fields": {
                "project": {
                  "key": $key
                },
                "summary": $summary,
                "description": "No description provided.",
                "issuetype": {
                  "name": "Task"
                }
              }
            }')

          echo "JSON Data: $JSON_DATA"
          RESPONSE=$(curl -D- \
            -u "$JIRA_EMAIL:$JIRA_API_TOKEN" \
            -X POST \
            --data "$JSON_DATA" \
            -H "Content-Type: application/json" \
            "$JIRA_BASEURL/rest/api/2/issue/")
          echo "Jira API response: $RESPONSE"
          JIRA_ISSUE_KEY=$(echo "$RESPONSE" | grep -oP '(?<=key\":\")\w+-\d+')
          echo "JIRA_ISSUE_KEY=$JIRA_ISSUE_KEY" >> $GITHUB_ENV

      - name: Create branch for the issue
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          export LANG=en_US.UTF-8
          ISSUE_NUMBER=${{ github.event.issue.number }}
          ISSUE_TITLE="${{ github.event.issue.title }}"
          PREFIX=$(echo "$ISSUE_TITLE" | grep -oE '^(feat|fix|docs|setting|add|refactor|chore)')
          if [ -z "$PREFIX" ]; then PREFIX="feature"; fi
          TITLE_NO_PREFIX=$(echo "$ISSUE_TITLE" | sed -e "s/$PREFIX : //")
          CLEAN_TITLE=$(echo "$TITLE_NO_PREFIX" | iconv -c -f utf-8 -t ascii//TRANSLIT | sed 's/[^a-zA-Z0-9]//g')
          BRANCH_NAME="${PREFIX}/#${ISSUE_NUMBER}-${CLEAN_TITLE}"
          echo "Creating branch with name: $BRANCH_NAME"
          git config --global user.name "github-actions[bot]"
          git config --global user.email "github-actions[bot]@users.noreply.github.com"
          git checkout -b "$BRANCH_NAME"
          git push "https://x-access-token:${GITHUB_TOKEN}@github.com/${{ github.repository }}" "$BRANCH_NAME"
